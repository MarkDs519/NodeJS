{"ast":null,"code":"var databaseHandler = require('/backend/testConnection.js');\nvar validator = require('./validator.js');\nvar eventHandler = () => {\n  var validate = validator();\n  // handler function\n  var handlerInp = {\n    // sign in handler\n    handleSignInInputChange: (event, signInData, setData) => {\n      event.preventDefault();\n      // change the state as the user types in the data and simultaneously insert the values inside the state\n      const newData = {\n        ...signInData\n      };\n      // USERNAME VALIDATION\n      if (event.target.name === \"username\") {\n        if (validate.isValidUsername(event) === true) {\n          newData[event.target.name] = event.target.value;\n          // set username valid to true\n          newData[\"usernameValid\"] = true;\n        } else {\n          newData[\"usernameValid\"] = false;\n        }\n      }\n\n      // PASSWORD VALIDATION\n      if (event.target.name === \"password\") {\n        if (validate.isValidPassword(event) === true) {\n          newData[event.target.name] = event.target.value;\n          // set username valid to true\n          newData[\"passwordValid\"] = true;\n        } else {\n          newData[\"passwordValid\"] = false;\n        }\n      }\n\n      // check if Remember me checkboc is checked and set the state of the checkbox to true\n      event.target.name === \"rememberCheckbox\" ? newData[event.target.name] = event.target.checked : newData[event.target.name] = event.target.value;\n      console.log(newData);\n      setData(newData);\n    },\n    // sign up handler\n    handleSignUpInputChange: (event, signUpData, setData) => {\n      event.preventDefault();\n      const newSignUpData = {\n        ...signUpData\n      };\n      // EMAIL VALIDATION\n      if (event.target.name === \"email\") {\n        if (validate.isValidEmail(event) === true) {\n          newSignUpData[event.target.name] = event.target.value;\n          newSignUpData[\"emailValid\"] = true;\n        } else {\n          console.log(\"Length of email: \", newSignUpData[event.target.name].length);\n          newSignUpData[\"emailValid\"] = false;\n        }\n      }\n\n      // USERNAME VALIDATION\n      if (event.target.name === \"username\") {\n        if (validate.isValidUsername(event) === true) {\n          newSignUpData[event.target.name] = event.target.value;\n          // set username valid to true\n          newSignUpData[\"usernameValid\"] = true;\n        } else {\n          newSignUpData[\"usernameValid\"] = false;\n        }\n      }\n\n      // PASSWORD VALIDATION\n      if (event.target.name === \"password\") {\n        if (validate.isValidPassword(event) === true) {\n          newSignUpData[event.target.name] = event.target.value;\n          // set username valid to true\n          newSignUpData[\"passwordValid\"] = true;\n        } else {\n          newSignUpData[\"passwordValid\"] = false;\n        }\n      }\n\n      // for all other things\n      newSignUpData[event.target.name] = event.target.value;\n      console.log(newSignUpData);\n      setData(newSignUpData);\n      //return newSignUpData;  \n    },\n\n    handleSignUp: (signUpData, setData) => {\n      console.log(\"Uploading data to database...\");\n      databaseHandler.insertData(signUpData);\n\n      // clear the inputs\n      setData({\n        username: \"\",\n        password: \"\",\n        usernameValid: false,\n        passwordValid: false,\n        rememberCheckbox: false\n      });\n    }\n  };\n  return handlerInp;\n};\nmodule.exports = eventHandler;","map":{"version":3,"names":["databaseHandler","require","validator","eventHandler","validate","handlerInp","handleSignInInputChange","event","signInData","setData","preventDefault","newData","target","name","isValidUsername","value","isValidPassword","checked","console","log","handleSignUpInputChange","signUpData","newSignUpData","isValidEmail","length","handleSignUp","insertData","username","password","usernameValid","passwordValid","rememberCheckbox","module","exports"],"sources":["/Users/markdhrubasikder/Documents/Projects/NodeJS/webserver/frontend/src/handler.js"],"sourcesContent":["var databaseHandler = require('/backend/testConnection.js')\nvar validator = require('./validator.js');\n\nvar eventHandler = () => {\n    var validate = validator();\n    // handler function\n    var handlerInp = {\n        // sign in handler\n        handleSignInInputChange: (event, signInData, setData) => {\n            event.preventDefault();\n            // change the state as the user types in the data and simultaneously insert the values inside the state\n            const newData = {...signInData};\n            // USERNAME VALIDATION\n            if(event.target.name === \"username\"){\n                if(validate.isValidUsername(event)===true){\n                    newData[event.target.name] = event.target.value;\n                    // set username valid to true\n                    newData[\"usernameValid\"] = true;\n                }\n                else{\n                    newData[\"usernameValid\"] = false;\n                }\n            }\n\n            // PASSWORD VALIDATION\n            if(event.target.name === \"password\"){\n                if(validate.isValidPassword(event)===true){\n                    newData[event.target.name] = event.target.value;\n                    // set username valid to true\n                    newData[\"passwordValid\"] = true;\n                }\n                else{\n                    newData[\"passwordValid\"] = false;\n                }\n            }\n\n            // check if Remember me checkboc is checked and set the state of the checkbox to true\n            event.target.name === \"rememberCheckbox\" ? newData[event.target.name] = event.target.checked : newData[event.target.name] = event.target.value;\n            console.log(newData);\n            setData(newData);\n        },\n        // sign up handler\n        handleSignUpInputChange: (event, signUpData, setData) => {\n            event.preventDefault();\n            const newSignUpData = {...signUpData};\n            // EMAIL VALIDATION\n            if(event.target.name === \"email\"){\n                if(validate.isValidEmail(event)===true){\n                    newSignUpData[event.target.name]=event.target.value;\n                    newSignUpData[\"emailValid\"]=true;\n    \n                } else{\n                    console.log(\"Length of email: \", newSignUpData[event.target.name].length)\n                    newSignUpData[\"emailValid\"] = false\n                }\n            }\n\n            // USERNAME VALIDATION\n            if(event.target.name === \"username\"){\n                if(validate.isValidUsername(event)===true){\n                    newSignUpData[event.target.name] = event.target.value;\n                    // set username valid to true\n                    newSignUpData[\"usernameValid\"] = true;\n                }\n                else{\n                    newSignUpData[\"usernameValid\"] = false;\n                }\n            }\n\n            // PASSWORD VALIDATION\n            if(event.target.name === \"password\"){\n                if(validate.isValidPassword(event)===true){\n                    newSignUpData[event.target.name] = event.target.value;\n                    // set username valid to true\n                    newSignUpData[\"passwordValid\"] = true;\n                }\n                else{\n                    newSignUpData[\"passwordValid\"] = false;\n                }\n            }\n\n            // for all other things\n            newSignUpData[event.target.name] = event.target.value;\n            console.log(newSignUpData);\n            setData(newSignUpData);\n            //return newSignUpData;  \n        },\n\n        handleSignUp: (signUpData, setData) => {\n            console.log(\"Uploading data to database...\")\n            databaseHandler.insertData(signUpData);\n            \n            // clear the inputs\n            setData({\n                username: \"\",\n                password: \"\",\n                usernameValid: false,\n                passwordValid: false,\n                rememberCheckbox: false\n            });\n        \n          }\n    }\n    return handlerInp;\n}\n\nmodule.exports = eventHandler;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}