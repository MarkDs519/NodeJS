{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nvar eventHandler = () => {\n  _s();\n  const [signUpData, setSignUpData] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    emailValid: false,\n    usernameValid: false,\n    passwordValid: false\n  });\n  // handler function\n  var handler = {\n    // CHECK OF VALID EMAIL\n    isValidEmail: e => {\n      if (e.target.name === \"email\") {\n        let mail = e.target.value;\n        let validEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n        if (!validEmail.test(mail)) {\n          //console.log(\"Password should be atleast 8 characters.\")\n          return false;\n        } else {\n          //data[e.target.name] = mail;\n          // set valid password as true\n          return true;\n          //console.log(newSignUpData[\"passwordValid\"]);\n        }\n      }\n    },\n\n    // CHECK FOR VALID USERNAME\n    isValidUsername: e => {\n      if (e.target.name === \"username\") {\n        let user = e.target.value;\n        if (user.length < 5) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n    },\n    // CHECK FOR PASSWORD VALIDATION\n    isValidPassword: e => {\n      if (e.target.name === \"password\") {\n        let validPass = /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\n        let pass = e.target.value;\n        if (!pass.match(validPass)) {\n          //console.log(\"Password should be atleast 8 characters.\")\n          return false;\n        } else {\n          return true;\n        }\n      }\n    },\n    // SIGN UP HANDLER\n    handleSignUpInputChange: event => {\n      event.preventDefault();\n      // change the state as the user types in the data and simultaneously insert the values inside the state\n      const newSignUpData = {\n        ...signUpData\n      };\n\n      // VALID EMAIL\n      if (handler.isValidEmail(event) === true) {\n        newSignUpData[event.target.name] = event.target.value;\n        newSignUpData[\"emailValid\"] = true;\n      } else {\n        newSignUpData[\"emailValid\"] = false;\n      }\n\n      // USERNAME VALIDATION\n      if (handler.isValidUsername(event) === true) {\n        newSignUpData[event.target.name] = event.target.value;\n        // set username valid to true\n        newSignUpData[\"usernameValid\"] = true;\n      } else {\n        newSignUpData[\"usernameValid\"] = false;\n      }\n\n      // PASSWORD VALIDATION\n      if (handler.isValidPassword(event) === true) {\n        newSignUpData[event.target.name] = event.target.value;\n        // set username valid to true\n        newSignUpData[\"passwordValid\"] = true;\n      } else {\n        newSignUpData[\"passwordValid\"] = false;\n      }\n\n      // for all other things\n      newSignUpData[event.target.name] = event.target.value;\n      console.log(newSignUpData);\n      setSignUpData(newSignUpData);\n      //console.log(newSignUpData);\n    },\n\n    returnSignUpData: () => {\n      return signUpData;\n    },\n    returnSetSignUpData: () => {\n      return setSignUpData;\n    }\n  };\n  return handler;\n};\n_s(eventHandler, \"DhENV+TdxIN8yJo7fXXEAMqnP74=\");\nmodule.exports = eventHandler;","map":{"version":3,"names":["React","useState","eventHandler","_s","signUpData","setSignUpData","firstname","lastname","username","email","password","emailValid","usernameValid","passwordValid","handler","isValidEmail","e","target","name","mail","value","validEmail","test","isValidUsername","user","length","isValidPassword","validPass","pass","match","handleSignUpInputChange","event","preventDefault","newSignUpData","console","log","returnSignUpData","returnSetSignUpData","module","exports"],"sources":["/Users/markdhrubasikder/Documents/gitProjects/NodeJS/webserver/frontend/src/handler.js"],"sourcesContent":["import React, { useState} from \"react\";\n\n\nvar eventHandler = () => {\n    const [signUpData, setSignUpData] = useState({\n        firstname: \"\",\n        lastname: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        emailValid: false,\n        usernameValid: false,\n        passwordValid: false\n      })\n    // handler function\n    var handler = {\n        // CHECK OF VALID EMAIL\n        isValidEmail: (e) => {\n            if(e.target.name === \"email\"){\n                let mail = e.target.value;\n                let validEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n                if(!validEmail.test(mail)){\n                  //console.log(\"Password should be atleast 8 characters.\")\n                  return false;\n                }\n                else{\n                  //data[e.target.name] = mail;\n                  // set valid password as true\n                  return true;\n                  //console.log(newSignUpData[\"passwordValid\"]);\n                }\n              }\n        },\n        // CHECK FOR VALID USERNAME\n        isValidUsername: (e) => {\n            if(e.target.name === \"username\"){\n                let user = e.target.value;\n                if(user.length < 5){\n                  return false;\n                }\n                else{\n                  return true;\n                }\n              }\n        },\n\n        // CHECK FOR PASSWORD VALIDATION\n        isValidPassword: (e) => {\n            if(e.target.name === \"password\"){\n                let validPass = /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\n                let pass = e.target.value;\n                if(!pass.match(validPass)){\n                    //console.log(\"Password should be atleast 8 characters.\")\n                    return false;\n                }\n                else{\n                  return true;\n                }\n                \n              }\n        },\n\n        // SIGN UP HANDLER\n        handleSignUpInputChange: (event) => {\n            event.preventDefault();\n            // change the state as the user types in the data and simultaneously insert the values inside the state\n            const newSignUpData = {...signUpData};\n            \n            // VALID EMAIL\n            if(handler.isValidEmail(event)===true){\n                newSignUpData[event.target.name]=event.target.value;\n                newSignUpData[\"emailValid\"]=true;\n\n            } else{\n                newSignUpData[\"emailValid\"] = false\n            }\n        \n            // USERNAME VALIDATION\n            if(handler.isValidUsername(event)===true){\n                newSignUpData[event.target.name] = event.target.value;\n                // set username valid to true\n                newSignUpData[\"usernameValid\"] = true;\n            }\n            else{\n                newSignUpData[\"usernameValid\"] = false;\n            }\n        \n            // PASSWORD VALIDATION\n            if(handler.isValidPassword(event)===true){\n                newSignUpData[event.target.name] = event.target.value;\n                // set username valid to true\n                newSignUpData[\"passwordValid\"] = true;\n            }\n            else{\n                newSignUpData[\"passwordValid\"] = false;\n            }\n        \n            // for all other things\n            newSignUpData[event.target.name] = event.target.value;\n            \n            console.log(newSignUpData);\n            setSignUpData(newSignUpData);\n            //console.log(newSignUpData);\n        },\n\n        returnSignUpData: () => {\n            return signUpData;\n        },\n\n        returnSetSignUpData: () => {\n            return setSignUpData;\n        }\n        \n    }\n    return handler;\n    \n    \n}\n\nmodule.exports = eventHandler;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}