{"ast":null,"code":"const validator = () => {\n  const validate = {\n    // CHECK OF VALID EMAIL\n    isValidEmail: e => {\n      let mail = e.target.value;\n      let validEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n      if (!validEmail.test(mail)) {\n        //console.log(\"Password should be atleast 8 characters.\")\n        return false;\n      } else {\n        //data[e.target.name] = mail;\n        // set valid password as true\n        return true;\n        //console.log(newSignUpData[\"passwordValid\"]);\n      }\n    },\n\n    // CHECK FOR VALID USERNAME\n    isValidUsername: e => {\n      let user = e.target.value;\n      if (user.length < 5) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    // CHECK FOR PASSWORD VALIDATION\n    isValidPassword: e => {\n      let validPass = /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\n      let pass = e.target.value;\n      if (!pass.match(validPass)) {\n        //console.log(\"Password should be atleast 8 characters.\")\n        return false;\n      } else {\n        return true;\n      }\n    }\n  };\n  return validate;\n};\nmodule.exports = validator;","map":{"version":3,"names":["validator","validate","isValidEmail","e","mail","target","value","validEmail","test","isValidUsername","user","length","isValidPassword","validPass","pass","match","module","exports"],"sources":["C:/Users/mark.sikder/Documents/Personal/NodeJS/webserver/frontend/src/validator.js"],"sourcesContent":["const validator = () => {\r\n    const validate = {\r\n        // CHECK OF VALID EMAIL\r\n        isValidEmail: (e) => {\r\n            let mail = e.target.value;\r\n            let validEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\n            if(!validEmail.test(mail)){\r\n                //console.log(\"Password should be atleast 8 characters.\")\r\n                return false;\r\n            }\r\n            else{\r\n                //data[e.target.name] = mail;\r\n                // set valid password as true\r\n                return true;\r\n                //console.log(newSignUpData[\"passwordValid\"]);\r\n            }\r\n        },\r\n        // CHECK FOR VALID USERNAME\r\n        isValidUsername: (e) => {\r\n            let user = e.target.value;\r\n            if(user.length < 5){\r\n                return false;\r\n            }\r\n            else{\r\n                return true;\r\n            }\r\n              \r\n        },\r\n\r\n        // CHECK FOR PASSWORD VALIDATION\r\n        isValidPassword: (e) => {\r\n            let validPass = /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\r\n            let pass = e.target.value;\r\n            if(!pass.match(validPass)){\r\n                //console.log(\"Password should be atleast 8 characters.\")\r\n                return false;\r\n            }\r\n            else{\r\n                return true;\r\n            }\r\n                \r\n        }\r\n        \r\n    }\r\n    return validate;\r\n}\r\n\r\nmodule.exports = validator;"],"mappings":"AAAA,MAAMA,SAAS,GAAGA,CAAA,KAAM;EACpB,MAAMC,QAAQ,GAAG;IACb;IACAC,YAAY,EAAGC,CAAC,IAAK;MACjB,IAAIC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;MACzB,IAAIC,UAAU,GAAG,2CAA2C;MAC5D,IAAG,CAACA,UAAU,CAACC,IAAI,CAACJ,IAAI,CAAC,EAAC;QACtB;QACA,OAAO,KAAK;MAChB,CAAC,MACG;QACA;QACA;QACA,OAAO,IAAI;QACX;MACJ;IACJ,CAAC;;IACD;IACAK,eAAe,EAAGN,CAAC,IAAK;MACpB,IAAIO,IAAI,GAAGP,CAAC,CAACE,MAAM,CAACC,KAAK;MACzB,IAAGI,IAAI,CAACC,MAAM,GAAG,CAAC,EAAC;QACf,OAAO,KAAK;MAChB,CAAC,MACG;QACA,OAAO,IAAI;MACf;IAEJ,CAAC;IAED;IACAC,eAAe,EAAGT,CAAC,IAAK;MACpB,IAAIU,SAAS,GAAG,4CAA4C;MAC5D,IAAIC,IAAI,GAAGX,CAAC,CAACE,MAAM,CAACC,KAAK;MACzB,IAAG,CAACQ,IAAI,CAACC,KAAK,CAACF,SAAS,CAAC,EAAC;QACtB;QACA,OAAO,KAAK;MAChB,CAAC,MACG;QACA,OAAO,IAAI;MACf;IAEJ;EAEJ,CAAC;EACD,OAAOZ,QAAQ;AACnB,CAAC;AAEDe,MAAM,CAACC,OAAO,GAAGjB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}